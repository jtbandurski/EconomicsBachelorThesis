knitr::opts_chunk$set(echo = TRUE)
katalog = "Z:/Kuba/Studia/uw/licencjatWNE/kody/dane"
#Biblioteki
library(ggplot2)
library(lmtest)
library(tseries)
library(portes)
library(sandwich)
library(car)
library(dynlm)
library(xlsx)
katalog = "Z:/Kuba/Studia/uw/licencjatWNE/kody/dane"
#Biblioteki
library(ggplot2)
library(lmtest)
library(tseries)
library(portes)
library(sandwich)
library(car)
library(dynlm)
library(xlsx)
#Dane USA
#Wartości 3 czynnikow FF; 1 kolumna - data 2,3,4 kolumna - czynniki
Monthly3FF <- read.csv(paste(katalog, "F-F_Research_Data_Factors.CSV", sep="/"), skip=3, stringsAsFactors=FALSE)
colnames(Monthly3FF) <- c("Date", "Mkt.RF", "SMB", "HML","RF")
Monthly3FF <- Monthly3FF[1:1147,]
Monthly3FF <- transform(Monthly3FF,
Mkt.RF=as.numeric(Mkt.RF),
SMB=as.numeric(SMB),
HML=as.numeric(HML),
RF=as.numeric(RF))
#Portfele 2x3 Size and Book to Market
Portfolios2x3 <- read.csv(paste(katalog, "6_Portfolios_2x3.CSV", sep="/"), skip=15, stringsAsFactors=FALSE)
colnames(Portfolios2x3) <- c("Date",'SMALL.LoBM','ME1.BM2','SMALL.HiBM','BIG.LoBM','ME2.BM2','BIG.HiBM')
Portfolios2x3 <- Portfolios2x3[1:1147,]
Portfolios2x3 <- transform(Portfolios2x3,
SMALL.LoBM=as.numeric(SMALL.LoBM),
ME1.BM2=as.numeric(ME1.BM2),
SMALL.HiBM=as.numeric(SMALL.HiBM),
BIG.LoBM=as.numeric(BIG.LoBM),
ME2.BM2=as.numeric(ME2.BM2),
BIG.HiBM=as.numeric(BIG.HiBM))
#Połączone dane
Dane3FF <- merge(Monthly3FF, Portfolios2x3, by = "Date")
#2)GETS
G5model32 = lm(SMALL.HiBM ~ Mkt.RF  + SMB  + HML + I(HML^3)  + Mkt.RF:HML + SMB:HML, data=Dane3FF)
Coef.SMALL.HiBM = data.frame()
Stats.SMALL.HiBM= data.frame()
Coef.SMALL.HiBM<-t(as.data.frame(rbind(coeftest(G5model32, vcov.=vcovHAC(G5model32))[,1],
coeftest(G5model32, vcov.=vcovHAC(G5model32))[,4])))
#p-v ^2=0
#zmienna istotna
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,linearHypothesis(G5model32, "I(HML^2)=0")["Pr(>F)"][2,])
#p-v ^3=0
#zmienna istotna
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,linearHypothesis(G5model32, "I(Mkt.RF^3)=0")["Pr(>F)"][2,])
coeftest(G5model32, vcov.=vcovHAC(G5model32))
linearHypothesis(G5model32, "Mkt.RF:HML=0", "SBM:HML=0")
linearHypothesis(G5model32, c("Mkt.RF:HML=0", "SBM:HML=0"))
linearHypothesis(G5model32, c("Mkt.RF:HML=0", "HML:SBM=0"))
linearHypothesis(G5model32, c("Mkt.RF:HML=0", "SMB:HML=0"))
linearHypothesis(G5model32, c("I(HML^3)=0","Mkt.RF:HML=0", "SMB:HML=0"))
Coef.SMALL.HiBM = data.frame()
Stats.SMALL.HiBM= data.frame()
Coef.SMALL.HiBM<-t(as.data.frame(rbind(coeftest(G5model32, vcov.=vcovHAC(G5model32))[,1],
coeftest(G5model32, vcov.=vcovHAC(G5model32))[,4])))
#p-v ^2=0
# nie ma kwadratow
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,-1)
#p-v ^3=0
#zmienna istotna
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,linearHypothesis(G5model32, "I(HML^3)=0")["Pr(>F)"][2,])
#p-v inter=0
#zmienne łącznie istotna
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,linearHypothesis(G5model32, c("Mkt.RF:HML=0", "SMB:HML=0"))["Pr(>F)"][2,])
#p-v ^2=0 i ^3=0
#nie ma kwadratow
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,-1)
#p-v ^2=0 i ^3=0 i inter=0
#zmienne łącznie istotne, nie ma kwadratow
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,linearHypothesis(G5model32, c("I(HML^3)=0","Mkt.RF:HML=0", "SMB:HML=0"))["Pr(>F)"][2,])
#rest fit
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,resettest(G5model32, power=2:3, type="fitted")$p.value)
#rest reg (rhs)
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,resettest(G5model32, power=2:3, type="regressor")$p.value)
#Breusch-Godfrey
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,bgtest(G5model32, order = 1)$p.value)
#R^2
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,summary(G5model32)$r.squared)
#Adjusted R^2
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,summary(G5model32)$adj.r.squared)
#AIC
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,AIC(G5model22))
#SIC
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,BIC(G5model32))
Stats.SMALL.HiBM= data.frame()
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,-1)
#p-v ^3=0
#zmienna istotna
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,linearHypothesis(G5model32, "I(HML^3)=0")["Pr(>F)"][2,])
#p-v inter=0
#zmienne łącznie istotna
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,linearHypothesis(G5model32, c("Mkt.RF:HML=0", "SMB:HML=0"))["Pr(>F)"][2,])
#p-v ^2=0 i ^3=0
#nie ma kwadratow
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,-1)
#p-v ^2=0 i ^3=0 i inter=0
#zmienne łącznie istotne, nie ma kwadratow
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,linearHypothesis(G5model32, c("I(HML^3)=0","Mkt.RF:HML=0", "SMB:HML=0"))["Pr(>F)"][2,])
#rest fit
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,resettest(G5model32, power=2:3, type="fitted")$p.value)
#rest reg (rhs)
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,resettest(G5model32, power=2:3, type="regressor")$p.value)
#Breusch-Godfrey
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,bgtest(G5model32, order = 1)$p.value)
#R^2
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,summary(G5model32)$r.squared)
#Adjusted R^2
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,summary(G5model32)$adj.r.squared)
#AIC
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,AIC(G5model32))
#SIC
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,BIC(G5model32))
#N
Stats.SMALL.HiBM<-rbind(Stats.SMALL.HiBM,summary(G5model32)$df[1]+summary(G5model32)$df[2])
write.xlsx(Coef.SMALL.HiBM,"SMALL.HiBM.xlsx", sheetName="Coef")
write.xlsx(Stats.SMALL.HiBM,"SMALL.HiBM.xlsx", sheetName="Stats", append=TRUE)
coeftest(G5model32, vcov.=vcovHAC(G5model32))
#2)GETS
G4model41 = lm(BIG.LoBM ~ Mkt.RF  + I(Mkt.RF^3) + SMB + I(SMB^2)  + HML + I(HML^3)  + Mkt.RF:HML + SMB:HML, data=Dane3FF)
coeftest(G4model41, vcov.=vcovHAC(G4model41))
linearHypothesis(G4model41, c("I(Mkt.RF^3)","I(HML^3)=0"))["Pr(>F)"][2,]
linearHypothesis(G5model32, c("Mkt.RF:HML=0", "SMB:HML=0"))["Pr(>F)"][2,]
linearHypothesis(G4model41, c("I(SMB^2)=0", "I(Mkt.RF^3)","I(HML^3)=0",
"Mkt.RF:HML=0", "SMB:HML=0"))["Pr(>F)"][2,]
linearHypothesis(G4model41, c("I(SMB^2)=0",
"I(Mkt.RF^3)","I(HML^3)=0"))["Pr(>F)"][2,]
linearHypothesis(G4model41, c("I(SMB^2)=0", "I(Mkt.RF^3)","I(HML^3)=0",
"Mkt.RF:HML=0", "SMB:HML=0"))["Pr(>F)"][2,]
Coef.BIG.LoBM = data.frame()
Stats.BIG.LoBM= data.frame()
Coef.BIG.LoBM<-t(as.data.frame(rbind(coeftest(G4model41, vcov.=vcovHAC(G4model41))[,1],
coeftest(G4model41, vcov.=vcovHAC(G4model41))[,4])))
#p-v ^2=0
#zmienne łącznie istotne
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,linearHypothesis(G4model41, "I(SMB^2)=0")["Pr(>F)"][2,])
#p-v ^3=0
#zmienne łącznie istotne
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,linearHypothesis(G4model41, c("I(Mkt.RF^3)","I(HML^3)=0"))["Pr(>F)"][2,])
#p-v inter=0
#zmienne łącznie istotne
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,linearHypothesis(G5model32, c("Mkt.RF:HML=0", "SMB:HML=0"))["Pr(>F)"][2,])
#p-v ^2=0 i ^3=0
#zmienne łącznie istotne
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,linearHypothesis(G4model41, c("I(SMB^2)=0",
"I(Mkt.RF^3)","I(HML^3)=0"))["Pr(>F)"][2,])
#p-v ^2=0 i ^3=0 i inter=0
#zmienne łącznie istotne
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,linearHypothesis(G4model41, c("I(SMB^2)=0", "I(Mkt.RF^3)","I(HML^3)=0",
"Mkt.RF:HML=0", "SMB:HML=0"))["Pr(>F)"][2,])
#rest fit
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,resettest(G4model41, power=2:3, type="fitted")$p.value)
#rest reg (rhs)
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,resettest(G4model41, power=2:3, type="regressor")$p.value)
#Breusch-Godfrey
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,bgtest(G4model41, order = 1)$p.value)
#R^2
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,summary(G4model41)$r.squared)
#Adjusted R^2
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,summary(G4model41)$adj.r.squared)
#AIC
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,AIC(G4model41))
#SIC
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,BIC(G4model41))
#N
Stats.BIG.LoBM<-rbind(Stats.BIG.LoBM,summary(G4model41)$df[1]+summary(G4model41)$df[2])
write.xlsx(Coef.BIG.LoBM,"BIG.LoBM.xlsx", sheetName="Coef")
write.xlsx(Stats.BIG.LoBM,"BIG.LoBM.xlsx", sheetName="Stats", append=TRUE)
coeftest(G4model41, vcov.=vcovHAC(G4model41))
#testy diagnostyczne
#forma funkcyjna
resettest(G1model52, power=2:3, type="fitted")
#Trzeba odrzucic duzo zeby przeszlo RESET
model51 = lm(ME2.BM2 ~ Mkt.RF + I(Mkt.RF^2) + I(Mkt.RF^3) + SMB + I(SMB^2) + I(SMB^3) + HML + I(HML^2)+ I(HML^3) + Mkt.RF:SMB + Mkt.RF:HML + SMB:HML, data=Dane3FF)
#testy diagnostyczne
#forma funkcyjna
resettest(model51, power=2:3, type="fitted")
model52 = lm(ME2.BM2 ~ Mkt.RF + I(Mkt.RF^2) + I(Mkt.RF^3) + SMB + I(SMB^2)  + HML , data=Dane3FF)
#forma funkcyjna
resettest(model52, power=2:3, type="fitted")
model52 = lm(ME2.BM2 ~ Mkt.RF + I(Mkt.RF^2) + I(Mkt.RF^3) + SMB + I(SMB^2)  + HML +  Mkt.RF:SMB + Mkt.RF:HML + SMB:HML, data=Dane3FF)
#forma funkcyjna
resettest(model52, power=2:3, type="fitted")
model52 = lm(ME2.BM2 ~ Mkt.RF + I(Mkt.RF^2) + I(Mkt.RF^3) + SMB + I(SMB^2)  + HML +
Mkt.RF:SMB + Mkt.RF:HML , data=Dane3FF)
#forma funkcyjna
resettest(model52, power=2:3, type="fitted")
model52 = lm(ME2.BM2 ~ Mkt.RF + I(Mkt.RF^2) + I(Mkt.RF^3) + SMB + I(SMB^2)  + HML +
Mkt.RF:SMB  + SMB:HML, data=Dane3FF)
#forma funkcyjna
resettest(model52, power=2:3, type="fitted")
model52 = lm(ME2.BM2 ~ Mkt.RF + I(Mkt.RF^2) + I(Mkt.RF^3) + SMB + I(SMB^2)  + HML +
Mkt.RF:HML + SMB:HML, data=Dane3FF)
#forma funkcyjna
resettest(model52, power=2:3, type="fitted")
model52 = lm(ME2.BM2 ~ Mkt.RF + I(Mkt.RF^2) + I(Mkt.RF^3) + SMB + I(SMB^2)  + HML +
+ SMB:HML, data=Dane3FF)
#forma funkcyjna
resettest(model52, power=2:3, type="fitted")
model52 = lm(ME2.BM2 ~ Mkt.RF + I(Mkt.RF^2) + I(Mkt.RF^3) + SMB + I(SMB^2)  + HML +
Mkt.RF:SMB , data=Dane3FF)
#forma funkcyjna
resettest(model52, power=2:3, type="fitted")
coeftest(model52, vcov.=vcovHAC(model52))
#GETS
linearHypothesis(model52, c("I(SMB^2)"), vcov.=vcovHAC(model52))
G1model52 = lm(ME2.BM2 ~ Mkt.RF  +I(Mkt.RF^2)+ I(Mkt.RF^3) + SMB   + HML +
Mkt.RF:SMB, data=Dane3FF)
#forma funkcyjna
resettest(G1model52, power=2:3, type="fitted")
#odporna Newey-West
coeftest(G1model52, vcov.=vcovHAC(G1model52))
linearHypothesis(model52, c("I(SMB^2)", "I(Mkt.RF^2)"), vcov.=vcovHAC(model52))
#GETS
linearHypothesis(model52, c("I(SMB^2)"), vcov.=vcovHAC(model52))
linearHypothesis(model52, c("I(SMB^2)", "I(Mkt.RF^2)"), vcov.=vcovHAC(model52))
G2model52 = lm(ME2.BM2 ~ Mkt.RF  + I(Mkt.RF^3) + SMB   + HML +
Mkt.RF:SMB, data=Dane3FF)
#forma funkcyjna
resettest(G2model52, power=2:3, type="fitted")
#odporna Newey-West
coeftest(G2model52, vcov.=vcovHAC(G1model52))
linearHypothesis(model52, c("I(SMB^2)", "I(Mkt.RF^2)", "Mkt.RF:SMB"), vcov.=vcovHAC(model52))
#odporna Newey-West
coeftest(G2model52, vcov.=vcovHAC(G2model52))
#forma funkcyjna
resettest(G3model52, power=2:3, type="fitted")
G3model52 = lm(ME2.BM2 ~ Mkt.RF  + I(Mkt.RF^3) + SMB   + HML, data=Dane3FF)
#forma funkcyjna
resettest(G3model52, power=2:3, type="fitted")
#odporna Newey-West
coeftest(G3model52, vcov.=vcovHAC(G3model52))
linearHypothesis(G3model52, "I(Mkt.RF^3)")["Pr(>F)"][2,]
G3model52 = lm(ME2.BM2 ~ Mkt.RF  + I(Mkt.RF^3) + SMB   + HML , data=Dane3FF)
Coef.ME2.BM2 = data.frame()
Stats.ME2.BM2= data.frame()
Coef.ME2.BM2<-t(as.data.frame(rbind(coeftest(G3model52, vcov.=vcovHAC(G3model52))[,1],
coeftest(G3model52, vcov.=vcovHAC(G3model52))[,4])))
#p-v ^2=0
#nie ma kwadratów
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,-1)
#p-v ^3=0
#zmienne łącznie istotne
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,linearHypothesis(G3model52, "I(Mkt.RF^3)")["Pr(>F)"][2,])
#p-v inter=0
#nie ma interakcji
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,-1)
#p-v ^2=0 i ^3=0
#nie ma kwadratow
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,-1)
#p-v ^2=0 i ^3=0 i inter=0
#nie ma interakcji i kwadratow
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,-1)
#rest fit
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,resettest(G3model52, power=2:3, type="fitted")$p.value)
#rest reg (rhs)
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,resettest(G3model52, power=2:3, type="regressor")$p.value)
#Breusch-Godfrey
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,bgtest(G3model52, order = 1)$p.value)
#R^2
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,summary(G3model52)$r.squared)
#Adjusted R^2
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,summary(G3model52)$adj.r.squared)
#AIC
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,AIC(G3model52))
#SIC
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,BIC(G3model52))
#N
Stats.ME2.BM2<-rbind(Stats.ME2.BM2,summary(G3model52)$df[1]+summary(G3model52)$df[2])
write.xlsx(Coef.ME2.BM2,"ME2.BM2.xlsx", sheetName="Coef")
write.xlsx(Stats.ME2.BM2,"ME2.BM2.xlsx", sheetName="Stats", append=TRUE)
coeftest(G3model52, vcov.=vcovHAC(G3model52))
G5model62 = lm(BIG.HiBM ~Mkt.RF + I(Mkt.RF^2) + HML + Mkt.RF:SMB + Mkt.RF:HML + SMB:HML, data=Dane3FF)
#testy diagnostyczne
#forma funkcyjna
resettest(G5model62, power=2:3, type="fitted")
#odporna Newey-West
coeftest(G5model62, vcov.=vcovHAC(G5model62))
G5model62 = lm(BIG.HiBM ~Mkt.RF + I(Mkt.RF^2) + HML + Mkt.RF:SMB + Mkt.RF:HML + SMB:HML, data=Dane3FF)
Coef.BIG.HiBM = data.frame()
Stats.BIG.HiBM= data.frame()
Coef.BIG.HiBM<-t(as.data.frame(rbind(coeftest(G5model62, vcov.=vcovHAC(G5model62))[,1],
coeftest(G5model62, vcov.=vcovHAC(G5model62))[,4])))
#p-v ^2=0
#zmienne łącznie istotne
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,linearHypothesis(G5model62, "I(Mkt.RF^3)")["Pr(>F)"][2,])
G5model62 = lm(BIG.HiBM ~Mkt.RF + I(Mkt.RF^2) + HML + Mkt.RF:SMB + Mkt.RF:HML + SMB:HML, data=Dane3FF)
Coef.BIG.HiBM = data.frame()
Stats.BIG.HiBM= data.frame()
Coef.BIG.HiBM<-t(as.data.frame(rbind(coeftest(G5model62, vcov.=vcovHAC(G5model62))[,1],
coeftest(G5model62, vcov.=vcovHAC(G5model62))[,4])))
#p-v ^2=0
#zmienne łącznie istotne
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,linearHypothesis(G5model62, "I(Mkt.RF^3)=0")["Pr(>F)"][2,])
linearHypothesis(G5model62, c("I(Mkt.RF^2)=0","Mkt.RF:SMB=0","Mkt.RF:HML=0", "SMB:HML=0"))["Pr(>F)"][2,]
linearHypothesis(G5model62, c("I(Mkt.RF^2)=0","Mkt.RF:SMB=0","Mkt.RF:HML=0", "HML:SMB=0"))["Pr(>F)"][2,]
G5model62 = lm(BIG.HiBM ~Mkt.RF + I(Mkt.RF^2) + HML + Mkt.RF:SMB + Mkt.RF:HML + SMB:HML, data=Dane3FF)
Coef.BIG.HiBM = data.frame()
Stats.BIG.HiBM= data.frame()
Coef.BIG.HiBM<-t(as.data.frame(rbind(coeftest(G5model62, vcov.=vcovHAC(G5model62))[,1],
coeftest(G5model62, vcov.=vcovHAC(G5model62))[,4])))
#p-v ^2=0
#zmienne łącznie istotne
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,linearHypothesis(G5model62, "I(Mkt.RF^2)=0")["Pr(>F)"][2,])
#p-v ^3=0
#nie ma szescianow
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,-1)
#p-v inter=0
#zmienne łącznie istotne
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,linearHypothesis(G5model62, c("I(Mkt.RF^2)=0",
"Mkt.RF:SMB=0","Mkt.RF:HML=0",
"HML:SMB=0"))["Pr(>F)"][2,])
#p-v ^2=0 i ^3=0
#nie ma szescianow
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,-1)
#p-v ^2=0 i ^3=0 i inter=0
#nie ma szescianow
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,-1)
#rest fit
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,resettest(G5model62, power=2:3, type="fitted")$p.value)
#rest reg (rhs)
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,resettest(G5model62, power=2:3, type="regressor")$p.value)
#Breusch-Godfrey
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,bgtest(G5model62, order = 1)$p.value)
#R^2
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,summary(G5model62)$r.squared)
#Adjusted R^2
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,summary(G5model62)$adj.r.squared)
#AIC
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,AIC(G5model62))
#SIC
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,BIC(G5model62))
#N
Stats.BIG.HiBM<-rbind(Stats.BIG.HiBM,summary(G5model62)$df[1]+summary(G5model62)$df[2])
write.xlsx(Coef.BIG.HiBM,"BIG.HiBM.xlsx", sheetName="Coef")
write.xlsx(Stats.BIG.HiBM,"BIG.HiBM.xlsx", sheetName="Stats", append=TRUE)
coeftest(G5model62, vcov.=vcovHAC(G5model62))
#2) GETS
plot(G4model13, which=5)
G4model13 = lm(SMALL.LoBM ~ Mkt.RF + I(Mkt.RF^2) + SMB + HML +  I(HML^3) + Mkt.RF:SMB + Mkt.RF:HML + SMB:HML, data=Dane3FF)
#2) GETS
plot(G4model13, which=5)
knitr::opts_chunk$set(echo = F, eval=T, include=F)
# miejsce na Wasze rozwiazania
O11=as.integer((0.667 - 0.76)/(0.4 - 0.76)*0.4*110)
O12=as.integer((1-(0.667 - 0.76)/(0.4 - 0.76))*0.76*110)
O21=as.integer((1-0.4)*(0.667 - 0.76)/(0.4 - 0.76)*110)
O22=as.integer((1-0.76)*(1-(0.667 - 0.76)/(0.4 - 0.76))*110)
Kontygencja <- matrix(c(O11,O12,O21,O22),nrow=2)
View(Kontygencja)
Kontygencja <- matrix(c(O11,O12,O21,O22),ncol=2)
Kontygencja <- matrix(c(O11,O21,O12,O22),ncol=2)
?pchisq
?chisq.test
chisq.test(Kontygencja)
chisq.test(Kontygencja, correct=F)
Zadluzenie.gmin <- read.delim("Zadluzenie gmin.csv", colClasses = c('factor', 'factor', 'factor', 'numeric', 'factor', 'factor'))
View(Zadluzenie.gmin)
library(stringr)
slownik <- c('02' = 'Dolnośląskie', '04' = 'Kujawsko-pomorskie',
'06' = 'Lubelskie', '08' = 'Lubuskie',
'10' = 'Łódzkie', '12' = 'Małopolskie',
'14' = 'Mazowieckie', '16' = 'Opolskie',
'18' = 'Podkarpackie', '20' = 'Podlaskie',
'22' = 'Pomorskie', '24' = 'Śląskie',
'26' = 'Świętokrzyskie', '28' = 'Warmińsko-mazurskie',
'30' = 'Wielkopolskie',  '32' = 'Zachodniopomorskie')
>sub_str
?sub_str
?STR_SUB
?str_sub
apply(Zadluzenie.gmin[,2],function(x) str_sub(x,1,2))
?apply
apply(Zadluzenie.gmin[,2],2,function(x) str_sub(x,1,2))
apply(Zadluzenie.gmin[2],2,function(x) str_sub(x,1,2))
Zadluzenie.gmin$kod <- apply(Zadluzenie.gmin[2],2,function(x) str_sub(x,1,2))
# ...
slownik[c('02', '02', '04')]
# ...
Zadluzenie.gmin$Wojewodztwo <- slownik[Zadluzenie.gmin$kod]
ggplot(data=Zadluzenie.gmin, aes(x=Zadłużenie.gmin)) + geom_histogram()
ggplot(data=Zadluzenie.gmin, aes(x=Zadluzenie.gmin)) + geom_histogram()
names(Zadluzenie.gmin)
ggplot(data=Zadluzenie.gmin, aes(x=ZadĹ.uĹĽenie.gmin)) + geom_histogram()
cutoff <- quantile(Zadluzenie.gmin$ZadĹ.uĹĽenie.gmin, 0.99)
Zadluzenie.gmin<-Zadluzenie.gmin[Zadluzenie.gmin$Zadłużenie.gmin < cutoff,]
Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie', ]
Zadluzenie.gmin <- read.delim("Zadluzenie gmin.csv", colClasses = c('factor', 'factor', 'factor', 'numeric', 'factor', 'factor'))
library(stringr)
Zadluzenie.gmin$kod <- apply(Zadluzenie.gmin[2],2,function(x) str_sub(x,1,2))
slownik <- c('02' = 'Dolnośląskie', '04' = 'Kujawsko-pomorskie',
'06' = 'Lubelskie', '08' = 'Lubuskie',
'10' = 'Łódzkie', '12' = 'Małopolskie',
'14' = 'Mazowieckie', '16' = 'Opolskie',
'18' = 'Podkarpackie', '20' = 'Podlaskie',
'22' = 'Pomorskie', '24' = 'Śląskie',
'26' = 'Świętokrzyskie', '28' = 'Warmińsko-mazurskie',
'30' = 'Wielkopolskie',  '32' = 'Zachodniopomorskie')
# ...
Zadluzenie.gmin$Wojewodztwo <- slownik[Zadluzenie.gmin$kod]
cutoff <- quantile(Zadluzenie.gmin$ZadĹ.uĹĽenie.gmin, 0.99)
Zadluzenie.gmin<-Zadluzenie.gmin[Zadluzenie.gmin$Zadłużenie.gmin < cutoff,]
Zadluzenie.gmin <- read.delim("Zadluzenie gmin.csv", colClasses = c('factor', 'factor', 'factor', 'numeric', 'factor', 'factor'))
library(stringr)
Zadluzenie.gmin$kod <- apply(Zadluzenie.gmin[2],2,function(x) str_sub(x,1,2))
slownik <- c('02' = 'Dolnośląskie', '04' = 'Kujawsko-pomorskie',
'06' = 'Lubelskie', '08' = 'Lubuskie',
'10' = 'Łódzkie', '12' = 'Małopolskie',
'14' = 'Mazowieckie', '16' = 'Opolskie',
'18' = 'Podkarpackie', '20' = 'Podlaskie',
'22' = 'Pomorskie', '24' = 'Śląskie',
'26' = 'Świętokrzyskie', '28' = 'Warmińsko-mazurskie',
'30' = 'Wielkopolskie',  '32' = 'Zachodniopomorskie')
# ...
Zadluzenie.gmin$Wojewodztwo <- slownik[Zadluzenie.gmin$kod]
Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie', ]
Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie', ]
a<-Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie', ]
View(a)
mean(Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie',4])
a<-Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie',4]
U=(mean(a)-25)/var(a)*sqrt(length(a)-1)
?pt
pt(U)
pt(U,df=length(a)-1)
pt(1-U,df=length(a)-1)
?t.test
t.test(a,alternative="less")
Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie',4]
mean(a)
var(a)
pt(U,df=length(a)-1)
t.test(a,alternative="less")
a<-Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie',4]
U=(mean(a)-25)/var(a)*sqrt(length(a)-1)
#p-value
pt(U,df=length(a)-1)
t.test(a,alternative="less")
length(a)
t.test(a,mu=25,alternative="less")
#p-value
pt(U,df=length(a)-1)
t.test(a,mu=25,alternative="less")
t=(mean(a)-25)/var(a)*sqrt(length(a)-1)
#p-value
pt(t,df=length(a)-1)
t.test(a,mu=25,alternative="less")
#p-value
pt(-0.68241,df=length(a)-1)
t.test(a,mu=25,alternative="less")
t=(mean(a)-25)/var(a)*(length(a)-1)/length(a)*sqrt(length(a)-1)
t=(mean(a)-25)/var(a)*(length(a)-1)/length(a)*sqrt(length(a)-1)
#p-value
pt(t,df=length(a)-1)
a<-Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie',4]
t=(mean(a)-25)/var(a)*(length(a)-1)/length(a)*sqrt(length(a)-1)
#p-value
pt(t,df=length(a)-1)
t.test(a,mu=25,alternative="less")
N = 110
X = as.integer(110*0.667)
p.value = 1 - pbinom(X - 1, N, 0.5) # = P(X >= successes)
p.value
a<-Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie',4]
t=(mean(a)-25)/var(a)*(length(a)-1)/length(a)*sqrt(length(a)-1)
#p-value
pt(t,df=length(a)-1)
t.test(a,mu=25,alternative="less")
t.test(x=a,mu=25,alternative="less")
a<-Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie',4]
t=(mean(a)-25)/var(a)*(length(a)-1)/length(a)*sqrt(length(a)-1)
#p-value
pt(t,df=length(a)-1)
t.test(x=a,mu=25,alternative="less")
a<-Zadluzenie.gmin[Zadluzenie.gmin$Wojewodztwo == 'Mazowieckie',4]
t=(mean(a)-25)/var(a)*(length(a)-1)/length(a)*sqrt(length(a)-1)
#p-value
pt(t,df=length(a)-1)
t.test(x=a,mu=25,alternative="less")
t.test(x=a,mu=25,alternative="less")
